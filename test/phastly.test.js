import test from 'ava'
import Chance from 'chance'

import * as fastly from '../build/index.js'

const chance = new Chance()
const rando = chance.word({length: 45})

let service = {
  name: 'test-' + chance.word({length: 30})
}

test.before('create a new service', async t => {

  let newService = await fastly.createServiceP(service.name)

  t.truthy(newService)
  t.truthy(newService.id)
  t.is(newService.name, service.name)
  service = newService
})

test('create backend', t => {

  const backendData = {
    name: service.name,
    address: `${rando}.storage.googleapis.com`,
    hostname: `${rando}.storage.googleapis.com`,
    port: 443,
  }

  return fastly.createBackendP(service.id, 1, backendData)
})

test('create domain', t => {

  const domainData = {
    name: `${rando}.global.ssl.fastly.net`,
    comment: 'generated by phastly test'
  }

  return fastly.createDomainP(service.id, 1, domainData)
})

test('update settings', t => {

  const settingsData = {
    'general.default_host': `${rando}.storage.googleapis.com`
  }

  return fastly.updateSettingsP(service.id, 1, settingsData)
})

test.after('activate a service version', t => {

  return fastly.activateServiceVersionP(service.id, 1)
})

test.after('deactivate a service', t => {
  return fastly.deactivateServiceVersionP(service.id, 1)
})

test.after.always('delete a service', t => {
  return fastly.deleteServiceP(service.id)
})
